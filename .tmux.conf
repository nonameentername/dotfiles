# Make it use C-a, similar to screen..

set-option -g default-command "bash"

set-option -g default-path "$HOME"

unbind C-b
set -g prefix C-a

# Reload key
bind r source-file ~/.tmux.conf

set -g status-bg black
set -g status-fg white

set-window-option -g window-status-current-bg blue

bind-key C-a last-window
bind-key C-r set-window-option synchronize-panes

set-option -g base-index 1

bind-key -n C-_ command-prompt "find-window -N '%%'"
bind-key -n C-\ command-prompt "switch-client -t '%%'"

bind-key C-c new-window
bind-key C-n next-window
bind-key C-p previous-window

bind-key C-[ copy-mode
bind-key C-] paste-buffer

bind C-h select-pane -L
bind C-l select-pane -R
bind C-k select-pane -U
bind C-j select-pane -D

bind h split-window -v
bind v split-window -h
bind a send-keys C-a
bind C-s choose-tree

bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

set -sg escape-time 0

set-option -g history-limit 32767

bind -t vi-copy y copy-pipe 'xclip -in -selection clipboard'

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"
